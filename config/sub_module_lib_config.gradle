apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(android_build_sdk_version)
    buildToolsVersion android_build_tools_version

    publishNonDefault true

    defaultConfig {
        minSdkVersion Integer.parseInt(android_build_min_sdk_version)
        targetSdkVersion android_build_target_sdk_version
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
        preview{
            minifyEnabled false
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/lib/AndroidManifest.xml'
            jniLibs.srcDirs = ['libs']
        }
    }
}

ext.getLibrayBuildType = { ->
    def buildType = ""

    def defaultTaskExecutionRequest = gradle.startParameter.taskRequests[0]
    if (defaultTaskExecutionRequest) {
        println "defaultTaskExecutionRequest"
        defaultTaskExecutionRequest.getArgs().each { taskRequest ->
            if (taskRequest == ":ibu_main:generateDebugSources") {
                buildType = "Debug"
            } else if (taskRequest == ":ibu_main:generateReleaseSources") {
                buildType = "Release"
            } else if (taskRequest == ":ibu_main:generateDebugableReleaseSources") {
                buildType = "DebugableRelease"
            }
        }
    }
    return buildType
}
